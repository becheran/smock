// DO NOT EDIT
// Code generated by smock 

package testpackage_mock

import (
	io "io"
	os "os"
	testpackage "github.com/test/testpackage"
	"fmt"
)

// MockInheritOwn must implement interface testpackage.InheritOwn
var _ testpackage.InheritOwn = &MockInheritOwn{}

func NewMockInheritOwn(t interface {
	Fatalf(format string, args ...interface{})
	Helper()
}) *MockInheritOwn {
	return &MockInheritOwn{t: t}
}

type MockInheritOwn struct {
	testpackage.InheritOwn
	
	t interface {
		Fatalf(format string, args ...interface{})
		Helper()
	}
	
	fRetType func() (r0 testpackage.MyType)
	fUseStdType func(fi os.FileInfo) (r0 io.Reader)
}

func (m *MockInheritOwn) RetType() (r0 testpackage.MyType) {
	if m.fRetType != nil {
		return m.fRetType()
	} else {
		m.unexpectedCall("RetType", fmt.Sprintf(""))
		return
	}
}

func (m *MockInheritOwn) UseStdType(fi os.FileInfo) (r0 io.Reader) {
	if m.fUseStdType != nil {
		return m.fUseStdType(fi)
	} else {
		m.unexpectedCall("UseStdType", fmt.Sprintf("%+v", fi))
		return
	}
}

func (m *MockInheritOwn) WHEN() *MockInheritOwnWhen {
	return &MockInheritOwnWhen{
		m: m,
	}
}

func (m *MockInheritOwn) unexpectedCall(method, args string) {
	m.t.Helper()
	m.t.Fatalf(`Unexpected call to MockInheritOwn.%s(%s)`, method, args)
}

type MockInheritOwnWhen struct {
	m *MockInheritOwn
}

func (mh *MockInheritOwnWhen) RetType() *MockInheritOwnRetTypeFunc {
	mh.m.fRetType = func() (r0 testpackage.MyType) { return }
	return &MockInheritOwnRetTypeFunc{m: mh.m}
}

type MockInheritOwnRetTypeFunc struct {
	m *MockInheritOwn
}

func (f *MockInheritOwnRetTypeFunc) Return(r0 testpackage.MyType) {
	f.m.fRetType = func() (testpackage.MyType) { return r0 }
}

func (f *MockInheritOwnRetTypeFunc) Do(do func() (r0 testpackage.MyType)) {
	f.m.fRetType = do
}

func (mh *MockInheritOwnWhen) UseStdType() *MockInheritOwnUseStdTypeFunc {
	mh.m.fUseStdType = func(fi os.FileInfo) (r0 io.Reader) { return }
	return &MockInheritOwnUseStdTypeFunc{m: mh.m}
}

type MockInheritOwnUseStdTypeFunc struct {
	m *MockInheritOwn
}

func (f *MockInheritOwnUseStdTypeFunc) Return(r0 io.Reader) {
	f.m.fUseStdType = func(os.FileInfo) (io.Reader) { return r0 }
}

func (f *MockInheritOwnUseStdTypeFunc) Do(do func(fi os.FileInfo) (r0 io.Reader)) {
	f.m.fUseStdType = do
}
